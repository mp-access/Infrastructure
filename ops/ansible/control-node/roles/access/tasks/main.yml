---
- block:

    - name: Create ACCESS directory
      file:
        path: ~/access
        state: directory
        owner: access

    - name: Copy docker-compose.yml
      copy:
        src: ../files/docker-compose.yml
        dest: ~/access/docker-compose.yml
        mode: 0700

    - name: Create .env file
      template:
        src: ../files/env.j2
        dest: ~/access/.env
        mode: 0700

    - name: Create empty folders
      file:
        path: "{{ item.name }}"
        state: directory
      with_items:
        - { name: '~/access/backend-config' }
        - { name: '~/access/logs' }
        - { name: '~/access/volumes/mongodb' }
        - { name: '~/access/volumes/postgres' }
        - { name: '~/access/nginx/ssl' }
        - { name: '~/access/nginx/letsencrypt' }
        - { name: '~/access/certs-docker' }
        - { name: '~/access/.ssh' }

    - name: Create backend configs folder
      file:
        path: ~/access/backend-config
        state: directory

    - name: Create repositories.json file
      copy:
        src: host_files/{{ inventory_hostname }}/repositories.json
        dest: ~/access/backend-config/repositories.json
        mode: 0700

    - name: Copy keycloak ACCESS themes folder
      unarchive:
        src: ../files/keycloak-themes.zip
        dest: ~/access/

    - name: Copy nginx conf
      template:
        src: "files/conf-no-tls.nginx.j2"
        dest: ~/access/nginx/conf.nginx
        mode: 600

    - name: Use letsencrypt?
      debug:
        msg: "{{ 'Using letsencrypt' if letsencrypt else 'Running web server on port 80' }}"

    - name: Create frontend ssl key pair
      shell: openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout ~/access/nginx/ssl/server.key -out ~/access/nginx/ssl/server.crt -subj "/C=CH/ST=Zuerich/L=Zuerich/O=ACCESS/OU=ACCESS/CN={{ ansible_ssh_host }}" -addext "subjectAltName = IP:{{ ansible_ssh_host }},DNS:{{ inventory_hostname }}"
      when: not letsencrypt

    - name: Copy selfsigned nginx conf
      copy:
        src: "files/conf-selfsigned.nginx"
        dest: ~/access/nginx/conf.nginx
        mode: 600
      when: not letsencrypt

    - name: Copy docker certs for client
      copy:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        mode: 0700
      with_items:
        - { src: 'host_files/{{ inventory_hostname }}/ca.pem', dest: '~/access/certs-docker/ca.pem' }
        - { src: 'host_files/{{ inventory_hostname }}/client-cert.pem', dest: '~/access/certs-docker/cert.pem' }
        - { src: 'host_files/{{ inventory_hostname }}/client-key.pem', dest: '~/access/certs-docker/key.pem' }
      tags: dockercerts

    - name: Copy git ssh keys
      copy:
        src: "host_files/{{ inventory_hostname }}/git/"
        dest: "~/access/.ssh"

    - name: Copy ssh config
      copy:
        src: "host_files/{{ inventory_hostname }}/ssh_config"
        dest: ~/access/.ssh/config
        mode: 0700

    - name: Start keycloak and postgres
      docker_compose:
        project_src: ~/access
        files: docker-compose.yml
        services:
          - postgres
          - keycloak
      tags:
        - keycloak

    - name: Wait on keycloak
      pause:
        seconds: 60
      tags:
        - keycloak

    - name: Copy realm provisioning script
      template:
        src: ../files/access-realm-config.sh
        dest: ~/access/access-realm-config.sh
        mode: 0555
      tags:
        - keycloak

    - block:
        - name: Add and configure realm
          shell: |
            docker cp ~/access/access-realm-config.sh $(docker-compose -f ~/access/docker-compose.yml ps -q keycloak):/opt/jboss/keycloak
            docker-compose -f ~/access/docker-compose.yml exec keycloak bash -c "sh /opt/jboss/keycloak/access-realm-config.sh"
          retries: 3
          delay: 5
          register: error
      rescue:
        - name: Realm already exists
          debug:
            msg: "Keycloak: {{ 'realm already exists' if 'Conflict detected' in error.stdout else 'Something unexpected happened' }}"
          when: '"Conflict detected" in error.stdout'
        - name: Unexpected error while configuring realm
          debug:
            msg: "Keycloak: {{ error.stdout }}"
          when: '"Conflict detected" not in error.stdout'
      tags:
        - keycloak

    - name: Start ACCESS
      docker_compose:
        project_src: ~/access
        files: docker-compose.yml
